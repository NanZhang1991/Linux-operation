vi /etc/sysconfig/network-scripts/ifcfg-enp0s3
桥接网络(连接本地虚拟机须使用此种连接方式）
编辑替换：
TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
BOOTPROTO=dhcp
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
NAME=enp0s3
UUID=81fbf343-a051-4bfe-992c-04e2c830fa40
DEVICE=enp0s3
ONBOOT=yes
DNS1=8.8.8.8
DNS2=4.2.2.2
IPADDR0=192.168.3.8
PREFIXO0=255.255.255.0

安装桌面
ifup enp0s3
rpm --query centos-release
yun install lsb
sudo  yum groupinstall "GNOME Desktop" "Graphical Administration Tools"
yum -y update
yum install -y gcc*
yum install gcc-c++
yum install make
yum install -y kernel kernel-devel Install the kernel-headers
yum install gpm*
yum install openssl
yum install openssl-devel
yum install zlib-devel

安装SSH
yum install openssh-server
启动SSH
service sshd start
设置开机运行
chkconfig sshd on

1. 安装依赖环境

　　# yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel

2.下载Python3
　　https://www.python.org/downloads/

# wget https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tgz

3.安装python3

　　我个人习惯安装在/usr/local/python3（具体安装位置看个人喜好）
　　创建目录：

# mkdir -p /usr/local/python3

　　解压下载好的Python-3.x.x.tgz包(具体包名因你下载的Python具体版本不不同⽽而不不同，

# tar -zxvf Python-3.6.5.tgz

4.进入解压后的目录，编译安装。
# cd Python-3.6.5
./configure --prefix=/usr/local/python3  # 配置编译的的路径（这里--prefix是指定编译安装的文件夹）
./configure --enable-optimizations  # 执行该代码后，会编译安装到 /usr/local/bin/ 下，且不用添加软连接或环境变量

make install    或者 make && make install

5.建立python3的软链
ln -s /usr/local/python3/bin/python3 /usr/bin/python3  # 添加软连接
ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3

6.并将/usr/local/python3/bin加入PATH
# vim ~/.bash_profile

·······
# User specific environment and startup programs
PATH=$PATH:$HOME/bin:/usr/local/python3/bin
export PATH
　　按ESC，输入:wq回车退出。
　　修改完记得执行行下面的命令，让上一步的修改生效：
# source ~/.bash_profile

检查Python3及pip3是否正常可用：
# python3 -V
#pip3 -V


centos7外部无法访问网页,linux外部无法访问网页
 主要原因在于防火墙的存在，导致的端口无法访问。

 CentOS7使用firewall而不是iptables。所以解决这类问题可以通过添加firewall的端口，使其对我们需要用的端口开放

1.使用命令  firewall-cmd --state查看防火墙状态。得到结果是running或者not running
2.在running 状态下，向firewall 添加需要开放的端口
 命令为 firewall-cmd --permanent --zone=public --add-port=80/tcp
3.firewall-cmd --reload //加载配置，使得修改有效。
4.firewall-cmd --permanent --zone=public --list-ports 查看开启的端口，出现80/tcp这开启正确
 现在就可以访问了



开启防火墙的命令
systemctl start firewalld.service

关闭防火墙的命令
systemctl stop firewalld.service

开机自动启动
systemctl enable firewalld.service

关闭开机自动启动
systemctl disable firewalld.service

查看防火墙状态
systemctl status firewalld
 
firewall-cmd --zone=public --remove-port=80/tcp --permanent
firewall-cmd --reload
systemctl restart firewalld.service

后台挂起进程
nohup python3 run.py >/root/python_project/Tea_nlp_analysis//run.log 2>&1 &
0 表示stdin标准输入，用户键盘输入的内容
1 表示stdout标准输出，输出到显示屏的内容
2 表示stderr标准错误，报错内

查看当前所有进程
ps aux|grep python 
ps -ef |grep python

关闭进程
kill -9 26879(PID)

移动文件
mv b.txt c.bak   将文件 b.txt 重命名为  c.bak
mv -i 456.txt /home/hk/cpdir/copy/abc    将  456.txt 移动到 /home/hk/cpdir/copy/ 并取名为 abc 若已存在文件 abc则会询问是否覆盖。
mv -f 456.txt /home/hk/cpdir/copy/abc    将  456.txt 移动到 /home/hk/cpdir/copy/ 并取名为 abc 若已存在文件 abc 覆盖时不会有任何提示。
mv  -b 123.txt  345.txt   将 123.txt 重命名为 345.txt，时先备份 345.txt

