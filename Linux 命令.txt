查看linux版本
more /etc/redhat-release
rpm --query centos-release

查看ip
ifconfig -a
物理地址 enter 08:00:27:5e:fe:8c 
vi /etc/sysconfig/network-scripts/ifcfg-enp0s3
桥接网络(连接本地虚拟机须使用此种连接方式）
编辑替换：
HWADDR=08:00:27:5e:fe:8c 
TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
BOOTPROTO=dhcp
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
NAME=enp0s3
UUID=81fbf343-a051-4bfe-992c-04e2c830fa40
DEVICE=enp0s3
ONBOOT=yes
DNS1=8.8.8.8
DNS2=4.2.2.2
IPADDR0=192.168.3.8
PREFIXO0=255.255.255.0
重启网络
systemctl restart network.service

安装桌面
ifup enp0s3
yu install lsb
yum groupinstall "X Window System
sudo  yum -y groupinstall "GNOME Desktop" "Graphical Administration Tools"
yum groupremove "GNOME Desktop" 
yum grouplist | more
echo "gnime_session" >>~/xintrc
yum -y update
yum install -y gcc*
yum install gcc-c++
yum install make
yum install -y kernel kernel-devel Install the kernel-headers
yum install gpm*
yum install openssl
yum install openssl-devel

安装SSH
yum install openssh-server
启动SSH
service sshd start
设置开机运行
chkconfig sshd on

yum repolist
显示全部的加 all

显示程序包
yum list

yum list [ available|installed|updates ] 显示可用的，已安装的，可以升级的

安装程序包
yum install 包名

升级程序包
yum update 包名

检查有哪些升级包可用
yum check-update 包名

卸载程序包
yum remove 包名

显示简要信息
yum info 包名

查看由那个包提供
yum provides 包名

清理本地缓存
yum clean

搜索
yum search 关键字

重新安装
yum reinstall

显示依赖关系
yum deplist

查看yum 事物历史
yum history

本地安装及升级本地程序包
yum localinstall 、localupdate
可以直接使用install 指定目录

包组的相关命令：
查看包组列表
yum grouplist
包组安装
yum groupinstall “包组名”
包组卸载
yum groupremove

包组升级
yum groupupdate

查看包组信息
yum groupinfo



Pyhon 安装
1. 安装依赖环境

     yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel 
     yum -y install db4-devel libpcap-devel xz-devel libffi-devel 
     yum -y install lzma xz-devel

2.下载Python3
　　https://www.python.org/downloads/

# wget https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tgz

3.安装python3

　　我个人习惯安装在/usr/local/python3（具体安装位置看个人喜好）
　　创建目录：

# mkdir -p /usr/local/python3

　　解压下载好的Python-3.x.x.tgz包(具体包名因你下载的Python具体版本不不同⽽而不不同，

# tar -zxvf Python-3.6.5.tgz

4.进入解压后的目录，编译安装。
# cd Python-3.6.5
./configure --prefix=/usr/local/python3  # 配置编译的的路径（这里--prefix是指定编译安装的文件夹）
./configure --enable-optimizations  # 执行该代码后，会编译安装到 /usr/local/bin/ 下，且不用添加软连接或环境变量

make install    或者 make && make install

5.建立python3的软链
ln -s /usr/local/python3/bin/python3 /usr/bin/python3  # 添加软连接
ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3

6.并将/usr/local/python3/bin加入PATH
# vim ~/.bash_profile

·······
# User specific environment and startup programs
PATH=$PATH:$HOME/bin:/usr/local/python3/bin
export PATH
　　按ESC，输入:wq回车退出。
　　修改完记得执行行下面的命令，让上一步的修改生效：
# source ~/.bash_profile

检查Python3及pip3是否正常可用：
# python3 -V
#pip3 -V

配置pip 国内镜像源
修改 ~/.pip/pip.conf (没有就创建一个)， 内容如下
[global]
timeout = 6000
index-url = http://pypi.douban.com/simple
trusted-host = pypi.douban.com

~~~~~
安装 Chrome 浏览器
第一步： 执行如下命令：
cd /etc/yum.repos.d/

第二步：命令如下：
创建一个repo文档
vim google-chrome.repo

第三步：命令如下：
把下列代码粘贴即可

[google-chrome]
name=google-chrome
baseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64
enabled=1
gpgcheck=1
gpgkey=https://dl.google.com/linux/linux_signing_key.pub

第四步：命令如下：
yum -y install google-chrome-stable即可。
由于墙的存在，有可能执行不成功，请使用如下命令替换上述命令：
yum -y install google-chrome-stable --nogpgcheck

#查看版本信息
/opt/google/chrome/chrome --version

#安装glib2
yum update glib2 -y 

#卸载Google浏览器
yum autoremove -y google-chrome

启动chrome
cd  /opt/google/chrome/
/google-chrome --no-sandbox

复制chrome图标到桌面
cp /usr/share/applications/google-chrome.desktop /root/Desktop/chrome.desktop
双击运行，选择 trust（信任）即可
右键属性 在command 后面加--no-sandbox ，即/usr/bin/google-chrome-stable %U--no-sandbox

~~~~~~~~~~~~
centos7外部无法访问网页,linux外部无法访问网页
 主要原因在于防火墙的存在，导致的端口无法访问。

 CentOS7使用firewall而不是iptables。所以解决这类问题可以通过添加firewall的端口，使其对我们需要用的端口开放

1.使用命令  firewall-cmd --state查看防火墙状态。得到结果是running或者not running
2.在running 状态下，向firewall 添加需要开放的端口
 命令为 firewall-cmd --permanent --zone=public --add-port=80/tcp
3.firewall-cmd --reload //加载配置，使得修改有效。
4.firewall-cmd --permanent --zone=public --list-ports 查看开启的端口，出现80/tcp这开启正确
 现在就可以访问了



firewall防火墙
1、查看firewall服务状态
systemctl status firewalld

出现Active: active (running)切高亮显示则表示是启动状态。

出现 Active: inactive (dead)灰色表示停止，看单词也行。
2、查看firewall的状态

firewall-cmd --state
3、开启、重启、关闭、firewalld.service服务
# 开启
service firewalld start
# 重启
service firewalld restart
# 关闭
service firewalld stop
4、查看防火墙规则

firewall-cmd --list-all 
5、查询、开放、关闭端口

# 查询端口是否开放
firewall-cmd --query-port=8080/tcp
# 开放80端口
firewall-cmd --permanent --add-port=80/tcp
# 移除端口
firewall-cmd --permanent --remove-port=8080/tcp
#重启防火墙(修改配置后要重启防火墙)
firewall-cmd --reload

查看端口状态
ss -tunlp
netstat -tunlp

后台挂起进程
nohup python3 Linux_run.py >/root/python_project/Tea_nlp_analysis//Linux_run.log 2>&1 &
nohup python3 text_pre_pro.py >/root/python_project/Tea_nlp_analysis//text_pre_pro.log 2>&1 &
0 表示stdin标准输入，用户键盘输入的内容
1 表示stdout标准输出，输出到显示屏的内容
2 表示stderr标准错误，报错内

删除文件
rm -f 

删除文件夹
rm -rf 文件夹

查看当前所有进程
ps aux|grep python 
ps -ef |grep python

关闭进程
kill -9 26879(PID)

移动文件
mv b.txt c.bak   将文件 b.txt 重命名为  c.bak
mv -i 456.txt /home/hk/cpdir/copy/abc    将  456.txt 移动到 /home/hk/cpdir/copy/ 并取名为 abc 若已存在文件 abc则会询问是否覆盖。
mv -f 456.txt /home/hk/cpdir/copy/abc    将  456.txt 移动到 /home/hk/cpdir/copy/ 并取名为 abc 若已存在文件 abc 覆盖时不会有任何提示。
mv  -b 123.txt  345.txt   将 123.txt 重命名为 345.txt，时先备份 345.txt



从本地复制到远程
scp local_file remote_username@remote_ip:remote_folder 
或者 
scp local_file remote_username@remote_ip:remote_file 

